// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AmazonUPS.proto

#ifndef PROTOBUF_AmazonUPS_2eproto__INCLUDED
#define PROTOBUF_AmazonUPS_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_AmazonUPS_2eproto();
void protobuf_AssignDesc_AmazonUPS_2eproto();
void protobuf_ShutdownFile_AmazonUPS_2eproto();

class AConnectedToSim;
class AmazontoUPS;
class UConnectedToSim;
class UPStoAmazon;
class dispatchTruck;
class packageDelivered;
class pkgInfo;
class sendTruck;
class truckArrived;

// ===================================================================

class AConnectedToSim : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AConnectedToSim) */ {
 public:
  AConnectedToSim();
  virtual ~AConnectedToSim();

  AConnectedToSim(const AConnectedToSim& from);

  inline AConnectedToSim& operator=(const AConnectedToSim& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AConnectedToSim& default_instance();

  void Swap(AConnectedToSim* other);

  // implements Message ----------------------------------------------

  inline AConnectedToSim* New() const { return New(NULL); }

  AConnectedToSim* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AConnectedToSim& from);
  void MergeFrom(const AConnectedToSim& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AConnectedToSim* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 worldid = 1;
  void clear_worldid();
  static const int kWorldidFieldNumber = 1;
  ::google::protobuf::int64 worldid() const;
  void set_worldid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:AConnectedToSim)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 worldid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_AmazonUPS_2eproto();
  friend void protobuf_AssignDesc_AmazonUPS_2eproto();
  friend void protobuf_ShutdownFile_AmazonUPS_2eproto();

  void InitAsDefaultInstance();
  static AConnectedToSim* default_instance_;
};
// -------------------------------------------------------------------

class UConnectedToSim : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UConnectedToSim) */ {
 public:
  UConnectedToSim();
  virtual ~UConnectedToSim();

  UConnectedToSim(const UConnectedToSim& from);

  inline UConnectedToSim& operator=(const UConnectedToSim& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UConnectedToSim& default_instance();

  void Swap(UConnectedToSim* other);

  // implements Message ----------------------------------------------

  inline UConnectedToSim* New() const { return New(NULL); }

  UConnectedToSim* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UConnectedToSim& from);
  void MergeFrom(const UConnectedToSim& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UConnectedToSim* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 worldid = 1;
  void clear_worldid();
  static const int kWorldidFieldNumber = 1;
  ::google::protobuf::int64 worldid() const;
  void set_worldid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:UConnectedToSim)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 worldid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_AmazonUPS_2eproto();
  friend void protobuf_AssignDesc_AmazonUPS_2eproto();
  friend void protobuf_ShutdownFile_AmazonUPS_2eproto();

  void InitAsDefaultInstance();
  static UConnectedToSim* default_instance_;
};
// -------------------------------------------------------------------

class pkgInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pkgInfo) */ {
 public:
  pkgInfo();
  virtual ~pkgInfo();

  pkgInfo(const pkgInfo& from);

  inline pkgInfo& operator=(const pkgInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pkgInfo& default_instance();

  void Swap(pkgInfo* other);

  // implements Message ----------------------------------------------

  inline pkgInfo* New() const { return New(NULL); }

  pkgInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pkgInfo& from);
  void MergeFrom(const pkgInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(pkgInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 packageid = 1;
  void clear_packageid();
  static const int kPackageidFieldNumber = 1;
  ::google::protobuf::int64 packageid() const;
  void set_packageid(::google::protobuf::int64 value);

  // optional int32 delX = 2;
  void clear_delx();
  static const int kDelXFieldNumber = 2;
  ::google::protobuf::int32 delx() const;
  void set_delx(::google::protobuf::int32 value);

  // optional int32 delY = 3;
  void clear_dely();
  static const int kDelYFieldNumber = 3;
  ::google::protobuf::int32 dely() const;
  void set_dely(::google::protobuf::int32 value);

  // optional int64 upsAcccount = 4;
  void clear_upsacccount();
  static const int kUpsAcccountFieldNumber = 4;
  ::google::protobuf::int64 upsacccount() const;
  void set_upsacccount(::google::protobuf::int64 value);

  // optional string description = 5;
  void clear_description();
  static const int kDescriptionFieldNumber = 5;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // @@protoc_insertion_point(class_scope:pkgInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 packageid_;
  ::google::protobuf::int32 delx_;
  ::google::protobuf::int32 dely_;
  ::google::protobuf::int64 upsacccount_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_AmazonUPS_2eproto();
  friend void protobuf_AssignDesc_AmazonUPS_2eproto();
  friend void protobuf_ShutdownFile_AmazonUPS_2eproto();

  void InitAsDefaultInstance();
  static pkgInfo* default_instance_;
};
// -------------------------------------------------------------------

class sendTruck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sendTruck) */ {
 public:
  sendTruck();
  virtual ~sendTruck();

  sendTruck(const sendTruck& from);

  inline sendTruck& operator=(const sendTruck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sendTruck& default_instance();

  void Swap(sendTruck* other);

  // implements Message ----------------------------------------------

  inline sendTruck* New() const { return New(NULL); }

  sendTruck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sendTruck& from);
  void MergeFrom(const sendTruck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(sendTruck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 whid = 1;
  void clear_whid();
  static const int kWhidFieldNumber = 1;
  ::google::protobuf::int32 whid() const;
  void set_whid(::google::protobuf::int32 value);

  // optional int32 whX = 2;
  void clear_whx();
  static const int kWhXFieldNumber = 2;
  ::google::protobuf::int32 whx() const;
  void set_whx(::google::protobuf::int32 value);

  // optional int32 whY = 3;
  void clear_why();
  static const int kWhYFieldNumber = 3;
  ::google::protobuf::int32 why() const;
  void set_why(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sendTruck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 whid_;
  ::google::protobuf::int32 whx_;
  ::google::protobuf::int32 why_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_AmazonUPS_2eproto();
  friend void protobuf_AssignDesc_AmazonUPS_2eproto();
  friend void protobuf_ShutdownFile_AmazonUPS_2eproto();

  void InitAsDefaultInstance();
  static sendTruck* default_instance_;
};
// -------------------------------------------------------------------

class truckArrived : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:truckArrived) */ {
 public:
  truckArrived();
  virtual ~truckArrived();

  truckArrived(const truckArrived& from);

  inline truckArrived& operator=(const truckArrived& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const truckArrived& default_instance();

  void Swap(truckArrived* other);

  // implements Message ----------------------------------------------

  inline truckArrived* New() const { return New(NULL); }

  truckArrived* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const truckArrived& from);
  void MergeFrom(const truckArrived& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(truckArrived* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 whid = 1;
  void clear_whid();
  static const int kWhidFieldNumber = 1;
  ::google::protobuf::int32 whid() const;
  void set_whid(::google::protobuf::int32 value);

  // optional int32 truckid = 2;
  void clear_truckid();
  static const int kTruckidFieldNumber = 2;
  ::google::protobuf::int32 truckid() const;
  void set_truckid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:truckArrived)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 whid_;
  ::google::protobuf::int32 truckid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_AmazonUPS_2eproto();
  friend void protobuf_AssignDesc_AmazonUPS_2eproto();
  friend void protobuf_ShutdownFile_AmazonUPS_2eproto();

  void InitAsDefaultInstance();
  static truckArrived* default_instance_;
};
// -------------------------------------------------------------------

class dispatchTruck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:dispatchTruck) */ {
 public:
  dispatchTruck();
  virtual ~dispatchTruck();

  dispatchTruck(const dispatchTruck& from);

  inline dispatchTruck& operator=(const dispatchTruck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const dispatchTruck& default_instance();

  void Swap(dispatchTruck* other);

  // implements Message ----------------------------------------------

  inline dispatchTruck* New() const { return New(NULL); }

  dispatchTruck* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const dispatchTruck& from);
  void MergeFrom(const dispatchTruck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(dispatchTruck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 truckid = 1;
  void clear_truckid();
  static const int kTruckidFieldNumber = 1;
  ::google::protobuf::int32 truckid() const;
  void set_truckid(::google::protobuf::int32 value);

  // repeated .pkgInfo packages = 2;
  int packages_size() const;
  void clear_packages();
  static const int kPackagesFieldNumber = 2;
  const ::pkgInfo& packages(int index) const;
  ::pkgInfo* mutable_packages(int index);
  ::pkgInfo* add_packages();
  ::google::protobuf::RepeatedPtrField< ::pkgInfo >*
      mutable_packages();
  const ::google::protobuf::RepeatedPtrField< ::pkgInfo >&
      packages() const;

  // @@protoc_insertion_point(class_scope:dispatchTruck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::pkgInfo > packages_;
  ::google::protobuf::int32 truckid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_AmazonUPS_2eproto();
  friend void protobuf_AssignDesc_AmazonUPS_2eproto();
  friend void protobuf_ShutdownFile_AmazonUPS_2eproto();

  void InitAsDefaultInstance();
  static dispatchTruck* default_instance_;
};
// -------------------------------------------------------------------

class packageDelivered : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:packageDelivered) */ {
 public:
  packageDelivered();
  virtual ~packageDelivered();

  packageDelivered(const packageDelivered& from);

  inline packageDelivered& operator=(const packageDelivered& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const packageDelivered& default_instance();

  void Swap(packageDelivered* other);

  // implements Message ----------------------------------------------

  inline packageDelivered* New() const { return New(NULL); }

  packageDelivered* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const packageDelivered& from);
  void MergeFrom(const packageDelivered& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(packageDelivered* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 packageid = 1;
  void clear_packageid();
  static const int kPackageidFieldNumber = 1;
  ::google::protobuf::int64 packageid() const;
  void set_packageid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:packageDelivered)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int64 packageid_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_AmazonUPS_2eproto();
  friend void protobuf_AssignDesc_AmazonUPS_2eproto();
  friend void protobuf_ShutdownFile_AmazonUPS_2eproto();

  void InitAsDefaultInstance();
  static packageDelivered* default_instance_;
};
// -------------------------------------------------------------------

class UPStoAmazon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UPStoAmazon) */ {
 public:
  UPStoAmazon();
  virtual ~UPStoAmazon();

  UPStoAmazon(const UPStoAmazon& from);

  inline UPStoAmazon& operator=(const UPStoAmazon& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UPStoAmazon& default_instance();

  void Swap(UPStoAmazon* other);

  // implements Message ----------------------------------------------

  inline UPStoAmazon* New() const { return New(NULL); }

  UPStoAmazon* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UPStoAmazon& from);
  void MergeFrom(const UPStoAmazon& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UPStoAmazon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .truckArrived truck_arrived = 1;
  int truck_arrived_size() const;
  void clear_truck_arrived();
  static const int kTruckArrivedFieldNumber = 1;
  const ::truckArrived& truck_arrived(int index) const;
  ::truckArrived* mutable_truck_arrived(int index);
  ::truckArrived* add_truck_arrived();
  ::google::protobuf::RepeatedPtrField< ::truckArrived >*
      mutable_truck_arrived();
  const ::google::protobuf::RepeatedPtrField< ::truckArrived >&
      truck_arrived() const;

  // repeated .packageDelivered delivered = 2;
  int delivered_size() const;
  void clear_delivered();
  static const int kDeliveredFieldNumber = 2;
  const ::packageDelivered& delivered(int index) const;
  ::packageDelivered* mutable_delivered(int index);
  ::packageDelivered* add_delivered();
  ::google::protobuf::RepeatedPtrField< ::packageDelivered >*
      mutable_delivered();
  const ::google::protobuf::RepeatedPtrField< ::packageDelivered >&
      delivered() const;

  // repeated .UConnectedToSim uconnected = 3;
  int uconnected_size() const;
  void clear_uconnected();
  static const int kUconnectedFieldNumber = 3;
  const ::UConnectedToSim& uconnected(int index) const;
  ::UConnectedToSim* mutable_uconnected(int index);
  ::UConnectedToSim* add_uconnected();
  ::google::protobuf::RepeatedPtrField< ::UConnectedToSim >*
      mutable_uconnected();
  const ::google::protobuf::RepeatedPtrField< ::UConnectedToSim >&
      uconnected() const;

  // @@protoc_insertion_point(class_scope:UPStoAmazon)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::truckArrived > truck_arrived_;
  ::google::protobuf::RepeatedPtrField< ::packageDelivered > delivered_;
  ::google::protobuf::RepeatedPtrField< ::UConnectedToSim > uconnected_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_AmazonUPS_2eproto();
  friend void protobuf_AssignDesc_AmazonUPS_2eproto();
  friend void protobuf_ShutdownFile_AmazonUPS_2eproto();

  void InitAsDefaultInstance();
  static UPStoAmazon* default_instance_;
};
// -------------------------------------------------------------------

class AmazontoUPS : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AmazontoUPS) */ {
 public:
  AmazontoUPS();
  virtual ~AmazontoUPS();

  AmazontoUPS(const AmazontoUPS& from);

  inline AmazontoUPS& operator=(const AmazontoUPS& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AmazontoUPS& default_instance();

  void Swap(AmazontoUPS* other);

  // implements Message ----------------------------------------------

  inline AmazontoUPS* New() const { return New(NULL); }

  AmazontoUPS* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AmazontoUPS& from);
  void MergeFrom(const AmazontoUPS& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AmazontoUPS* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .sendTruck send_truck = 1;
  int send_truck_size() const;
  void clear_send_truck();
  static const int kSendTruckFieldNumber = 1;
  const ::sendTruck& send_truck(int index) const;
  ::sendTruck* mutable_send_truck(int index);
  ::sendTruck* add_send_truck();
  ::google::protobuf::RepeatedPtrField< ::sendTruck >*
      mutable_send_truck();
  const ::google::protobuf::RepeatedPtrField< ::sendTruck >&
      send_truck() const;

  // repeated .dispatchTruck dispatch_truck = 2;
  int dispatch_truck_size() const;
  void clear_dispatch_truck();
  static const int kDispatchTruckFieldNumber = 2;
  const ::dispatchTruck& dispatch_truck(int index) const;
  ::dispatchTruck* mutable_dispatch_truck(int index);
  ::dispatchTruck* add_dispatch_truck();
  ::google::protobuf::RepeatedPtrField< ::dispatchTruck >*
      mutable_dispatch_truck();
  const ::google::protobuf::RepeatedPtrField< ::dispatchTruck >&
      dispatch_truck() const;

  // repeated .AConnectedToSim aconnected = 3;
  int aconnected_size() const;
  void clear_aconnected();
  static const int kAconnectedFieldNumber = 3;
  const ::AConnectedToSim& aconnected(int index) const;
  ::AConnectedToSim* mutable_aconnected(int index);
  ::AConnectedToSim* add_aconnected();
  ::google::protobuf::RepeatedPtrField< ::AConnectedToSim >*
      mutable_aconnected();
  const ::google::protobuf::RepeatedPtrField< ::AConnectedToSim >&
      aconnected() const;

  // @@protoc_insertion_point(class_scope:AmazontoUPS)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::sendTruck > send_truck_;
  ::google::protobuf::RepeatedPtrField< ::dispatchTruck > dispatch_truck_;
  ::google::protobuf::RepeatedPtrField< ::AConnectedToSim > aconnected_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_AmazonUPS_2eproto();
  friend void protobuf_AssignDesc_AmazonUPS_2eproto();
  friend void protobuf_ShutdownFile_AmazonUPS_2eproto();

  void InitAsDefaultInstance();
  static AmazontoUPS* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AConnectedToSim

// optional int64 worldid = 1;
inline void AConnectedToSim::clear_worldid() {
  worldid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AConnectedToSim::worldid() const {
  // @@protoc_insertion_point(field_get:AConnectedToSim.worldid)
  return worldid_;
}
inline void AConnectedToSim::set_worldid(::google::protobuf::int64 value) {
  
  worldid_ = value;
  // @@protoc_insertion_point(field_set:AConnectedToSim.worldid)
}

// -------------------------------------------------------------------

// UConnectedToSim

// optional int64 worldid = 1;
inline void UConnectedToSim::clear_worldid() {
  worldid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 UConnectedToSim::worldid() const {
  // @@protoc_insertion_point(field_get:UConnectedToSim.worldid)
  return worldid_;
}
inline void UConnectedToSim::set_worldid(::google::protobuf::int64 value) {
  
  worldid_ = value;
  // @@protoc_insertion_point(field_set:UConnectedToSim.worldid)
}

// -------------------------------------------------------------------

// pkgInfo

// optional int64 packageid = 1;
inline void pkgInfo::clear_packageid() {
  packageid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 pkgInfo::packageid() const {
  // @@protoc_insertion_point(field_get:pkgInfo.packageid)
  return packageid_;
}
inline void pkgInfo::set_packageid(::google::protobuf::int64 value) {
  
  packageid_ = value;
  // @@protoc_insertion_point(field_set:pkgInfo.packageid)
}

// optional int32 delX = 2;
inline void pkgInfo::clear_delx() {
  delx_ = 0;
}
inline ::google::protobuf::int32 pkgInfo::delx() const {
  // @@protoc_insertion_point(field_get:pkgInfo.delX)
  return delx_;
}
inline void pkgInfo::set_delx(::google::protobuf::int32 value) {
  
  delx_ = value;
  // @@protoc_insertion_point(field_set:pkgInfo.delX)
}

// optional int32 delY = 3;
inline void pkgInfo::clear_dely() {
  dely_ = 0;
}
inline ::google::protobuf::int32 pkgInfo::dely() const {
  // @@protoc_insertion_point(field_get:pkgInfo.delY)
  return dely_;
}
inline void pkgInfo::set_dely(::google::protobuf::int32 value) {
  
  dely_ = value;
  // @@protoc_insertion_point(field_set:pkgInfo.delY)
}

// optional int64 upsAcccount = 4;
inline void pkgInfo::clear_upsacccount() {
  upsacccount_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 pkgInfo::upsacccount() const {
  // @@protoc_insertion_point(field_get:pkgInfo.upsAcccount)
  return upsacccount_;
}
inline void pkgInfo::set_upsacccount(::google::protobuf::int64 value) {
  
  upsacccount_ = value;
  // @@protoc_insertion_point(field_set:pkgInfo.upsAcccount)
}

// optional string description = 5;
inline void pkgInfo::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& pkgInfo::description() const {
  // @@protoc_insertion_point(field_get:pkgInfo.description)
  return description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pkgInfo::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pkgInfo.description)
}
inline void pkgInfo::set_description(const char* value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pkgInfo.description)
}
inline void pkgInfo::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pkgInfo.description)
}
inline ::std::string* pkgInfo::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:pkgInfo.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* pkgInfo::release_description() {
  // @@protoc_insertion_point(field_release:pkgInfo.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void pkgInfo::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:pkgInfo.description)
}

// -------------------------------------------------------------------

// sendTruck

// optional int32 whid = 1;
inline void sendTruck::clear_whid() {
  whid_ = 0;
}
inline ::google::protobuf::int32 sendTruck::whid() const {
  // @@protoc_insertion_point(field_get:sendTruck.whid)
  return whid_;
}
inline void sendTruck::set_whid(::google::protobuf::int32 value) {
  
  whid_ = value;
  // @@protoc_insertion_point(field_set:sendTruck.whid)
}

// optional int32 whX = 2;
inline void sendTruck::clear_whx() {
  whx_ = 0;
}
inline ::google::protobuf::int32 sendTruck::whx() const {
  // @@protoc_insertion_point(field_get:sendTruck.whX)
  return whx_;
}
inline void sendTruck::set_whx(::google::protobuf::int32 value) {
  
  whx_ = value;
  // @@protoc_insertion_point(field_set:sendTruck.whX)
}

// optional int32 whY = 3;
inline void sendTruck::clear_why() {
  why_ = 0;
}
inline ::google::protobuf::int32 sendTruck::why() const {
  // @@protoc_insertion_point(field_get:sendTruck.whY)
  return why_;
}
inline void sendTruck::set_why(::google::protobuf::int32 value) {
  
  why_ = value;
  // @@protoc_insertion_point(field_set:sendTruck.whY)
}

// -------------------------------------------------------------------

// truckArrived

// optional int32 whid = 1;
inline void truckArrived::clear_whid() {
  whid_ = 0;
}
inline ::google::protobuf::int32 truckArrived::whid() const {
  // @@protoc_insertion_point(field_get:truckArrived.whid)
  return whid_;
}
inline void truckArrived::set_whid(::google::protobuf::int32 value) {
  
  whid_ = value;
  // @@protoc_insertion_point(field_set:truckArrived.whid)
}

// optional int32 truckid = 2;
inline void truckArrived::clear_truckid() {
  truckid_ = 0;
}
inline ::google::protobuf::int32 truckArrived::truckid() const {
  // @@protoc_insertion_point(field_get:truckArrived.truckid)
  return truckid_;
}
inline void truckArrived::set_truckid(::google::protobuf::int32 value) {
  
  truckid_ = value;
  // @@protoc_insertion_point(field_set:truckArrived.truckid)
}

// -------------------------------------------------------------------

// dispatchTruck

// optional int32 truckid = 1;
inline void dispatchTruck::clear_truckid() {
  truckid_ = 0;
}
inline ::google::protobuf::int32 dispatchTruck::truckid() const {
  // @@protoc_insertion_point(field_get:dispatchTruck.truckid)
  return truckid_;
}
inline void dispatchTruck::set_truckid(::google::protobuf::int32 value) {
  
  truckid_ = value;
  // @@protoc_insertion_point(field_set:dispatchTruck.truckid)
}

// repeated .pkgInfo packages = 2;
inline int dispatchTruck::packages_size() const {
  return packages_.size();
}
inline void dispatchTruck::clear_packages() {
  packages_.Clear();
}
inline const ::pkgInfo& dispatchTruck::packages(int index) const {
  // @@protoc_insertion_point(field_get:dispatchTruck.packages)
  return packages_.Get(index);
}
inline ::pkgInfo* dispatchTruck::mutable_packages(int index) {
  // @@protoc_insertion_point(field_mutable:dispatchTruck.packages)
  return packages_.Mutable(index);
}
inline ::pkgInfo* dispatchTruck::add_packages() {
  // @@protoc_insertion_point(field_add:dispatchTruck.packages)
  return packages_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pkgInfo >*
dispatchTruck::mutable_packages() {
  // @@protoc_insertion_point(field_mutable_list:dispatchTruck.packages)
  return &packages_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pkgInfo >&
dispatchTruck::packages() const {
  // @@protoc_insertion_point(field_list:dispatchTruck.packages)
  return packages_;
}

// -------------------------------------------------------------------

// packageDelivered

// optional int64 packageid = 1;
inline void packageDelivered::clear_packageid() {
  packageid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 packageDelivered::packageid() const {
  // @@protoc_insertion_point(field_get:packageDelivered.packageid)
  return packageid_;
}
inline void packageDelivered::set_packageid(::google::protobuf::int64 value) {
  
  packageid_ = value;
  // @@protoc_insertion_point(field_set:packageDelivered.packageid)
}

// -------------------------------------------------------------------

// UPStoAmazon

// repeated .truckArrived truck_arrived = 1;
inline int UPStoAmazon::truck_arrived_size() const {
  return truck_arrived_.size();
}
inline void UPStoAmazon::clear_truck_arrived() {
  truck_arrived_.Clear();
}
inline const ::truckArrived& UPStoAmazon::truck_arrived(int index) const {
  // @@protoc_insertion_point(field_get:UPStoAmazon.truck_arrived)
  return truck_arrived_.Get(index);
}
inline ::truckArrived* UPStoAmazon::mutable_truck_arrived(int index) {
  // @@protoc_insertion_point(field_mutable:UPStoAmazon.truck_arrived)
  return truck_arrived_.Mutable(index);
}
inline ::truckArrived* UPStoAmazon::add_truck_arrived() {
  // @@protoc_insertion_point(field_add:UPStoAmazon.truck_arrived)
  return truck_arrived_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::truckArrived >*
UPStoAmazon::mutable_truck_arrived() {
  // @@protoc_insertion_point(field_mutable_list:UPStoAmazon.truck_arrived)
  return &truck_arrived_;
}
inline const ::google::protobuf::RepeatedPtrField< ::truckArrived >&
UPStoAmazon::truck_arrived() const {
  // @@protoc_insertion_point(field_list:UPStoAmazon.truck_arrived)
  return truck_arrived_;
}

// repeated .packageDelivered delivered = 2;
inline int UPStoAmazon::delivered_size() const {
  return delivered_.size();
}
inline void UPStoAmazon::clear_delivered() {
  delivered_.Clear();
}
inline const ::packageDelivered& UPStoAmazon::delivered(int index) const {
  // @@protoc_insertion_point(field_get:UPStoAmazon.delivered)
  return delivered_.Get(index);
}
inline ::packageDelivered* UPStoAmazon::mutable_delivered(int index) {
  // @@protoc_insertion_point(field_mutable:UPStoAmazon.delivered)
  return delivered_.Mutable(index);
}
inline ::packageDelivered* UPStoAmazon::add_delivered() {
  // @@protoc_insertion_point(field_add:UPStoAmazon.delivered)
  return delivered_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::packageDelivered >*
UPStoAmazon::mutable_delivered() {
  // @@protoc_insertion_point(field_mutable_list:UPStoAmazon.delivered)
  return &delivered_;
}
inline const ::google::protobuf::RepeatedPtrField< ::packageDelivered >&
UPStoAmazon::delivered() const {
  // @@protoc_insertion_point(field_list:UPStoAmazon.delivered)
  return delivered_;
}

// repeated .UConnectedToSim uconnected = 3;
inline int UPStoAmazon::uconnected_size() const {
  return uconnected_.size();
}
inline void UPStoAmazon::clear_uconnected() {
  uconnected_.Clear();
}
inline const ::UConnectedToSim& UPStoAmazon::uconnected(int index) const {
  // @@protoc_insertion_point(field_get:UPStoAmazon.uconnected)
  return uconnected_.Get(index);
}
inline ::UConnectedToSim* UPStoAmazon::mutable_uconnected(int index) {
  // @@protoc_insertion_point(field_mutable:UPStoAmazon.uconnected)
  return uconnected_.Mutable(index);
}
inline ::UConnectedToSim* UPStoAmazon::add_uconnected() {
  // @@protoc_insertion_point(field_add:UPStoAmazon.uconnected)
  return uconnected_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::UConnectedToSim >*
UPStoAmazon::mutable_uconnected() {
  // @@protoc_insertion_point(field_mutable_list:UPStoAmazon.uconnected)
  return &uconnected_;
}
inline const ::google::protobuf::RepeatedPtrField< ::UConnectedToSim >&
UPStoAmazon::uconnected() const {
  // @@protoc_insertion_point(field_list:UPStoAmazon.uconnected)
  return uconnected_;
}

// -------------------------------------------------------------------

// AmazontoUPS

// repeated .sendTruck send_truck = 1;
inline int AmazontoUPS::send_truck_size() const {
  return send_truck_.size();
}
inline void AmazontoUPS::clear_send_truck() {
  send_truck_.Clear();
}
inline const ::sendTruck& AmazontoUPS::send_truck(int index) const {
  // @@protoc_insertion_point(field_get:AmazontoUPS.send_truck)
  return send_truck_.Get(index);
}
inline ::sendTruck* AmazontoUPS::mutable_send_truck(int index) {
  // @@protoc_insertion_point(field_mutable:AmazontoUPS.send_truck)
  return send_truck_.Mutable(index);
}
inline ::sendTruck* AmazontoUPS::add_send_truck() {
  // @@protoc_insertion_point(field_add:AmazontoUPS.send_truck)
  return send_truck_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::sendTruck >*
AmazontoUPS::mutable_send_truck() {
  // @@protoc_insertion_point(field_mutable_list:AmazontoUPS.send_truck)
  return &send_truck_;
}
inline const ::google::protobuf::RepeatedPtrField< ::sendTruck >&
AmazontoUPS::send_truck() const {
  // @@protoc_insertion_point(field_list:AmazontoUPS.send_truck)
  return send_truck_;
}

// repeated .dispatchTruck dispatch_truck = 2;
inline int AmazontoUPS::dispatch_truck_size() const {
  return dispatch_truck_.size();
}
inline void AmazontoUPS::clear_dispatch_truck() {
  dispatch_truck_.Clear();
}
inline const ::dispatchTruck& AmazontoUPS::dispatch_truck(int index) const {
  // @@protoc_insertion_point(field_get:AmazontoUPS.dispatch_truck)
  return dispatch_truck_.Get(index);
}
inline ::dispatchTruck* AmazontoUPS::mutable_dispatch_truck(int index) {
  // @@protoc_insertion_point(field_mutable:AmazontoUPS.dispatch_truck)
  return dispatch_truck_.Mutable(index);
}
inline ::dispatchTruck* AmazontoUPS::add_dispatch_truck() {
  // @@protoc_insertion_point(field_add:AmazontoUPS.dispatch_truck)
  return dispatch_truck_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::dispatchTruck >*
AmazontoUPS::mutable_dispatch_truck() {
  // @@protoc_insertion_point(field_mutable_list:AmazontoUPS.dispatch_truck)
  return &dispatch_truck_;
}
inline const ::google::protobuf::RepeatedPtrField< ::dispatchTruck >&
AmazontoUPS::dispatch_truck() const {
  // @@protoc_insertion_point(field_list:AmazontoUPS.dispatch_truck)
  return dispatch_truck_;
}

// repeated .AConnectedToSim aconnected = 3;
inline int AmazontoUPS::aconnected_size() const {
  return aconnected_.size();
}
inline void AmazontoUPS::clear_aconnected() {
  aconnected_.Clear();
}
inline const ::AConnectedToSim& AmazontoUPS::aconnected(int index) const {
  // @@protoc_insertion_point(field_get:AmazontoUPS.aconnected)
  return aconnected_.Get(index);
}
inline ::AConnectedToSim* AmazontoUPS::mutable_aconnected(int index) {
  // @@protoc_insertion_point(field_mutable:AmazontoUPS.aconnected)
  return aconnected_.Mutable(index);
}
inline ::AConnectedToSim* AmazontoUPS::add_aconnected() {
  // @@protoc_insertion_point(field_add:AmazontoUPS.aconnected)
  return aconnected_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::AConnectedToSim >*
AmazontoUPS::mutable_aconnected() {
  // @@protoc_insertion_point(field_mutable_list:AmazontoUPS.aconnected)
  return &aconnected_;
}
inline const ::google::protobuf::RepeatedPtrField< ::AConnectedToSim >&
AmazontoUPS::aconnected() const {
  // @@protoc_insertion_point(field_list:AmazontoUPS.aconnected)
  return aconnected_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AmazonUPS_2eproto__INCLUDED
